// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  name  String?
  password String
  isVerified Boolean @default(false)
  accessTokens   AccessToken[]
  refreshTokens  RefreshToken[]
  forgotToken ForgotToken[]
  verifyToken VerifyToken[]
}

model Todo {
  id Int @id @default(autoincrement())
  title String
  completed Boolean @default(false)
  description String?
  isPrivate Boolean @default(false)
}

model AccessToken {
  id        Int      @id @default(autoincrement())
  token     String
  userId    Int
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
}

model RefreshToken {
  id        Int      @id @default(autoincrement())
  token     String
  userId    Int
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
}

model ForgotToken {
  id        Int      @id @default(autoincrement())
  token     String
  userId    Int
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
}

model VerifyToken {
  id        Int      @id @default(autoincrement())
  token     String
  userId    Int
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
}